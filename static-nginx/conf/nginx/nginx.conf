daemon                              off;
user                                www-data;
worker_processes                    auto;
pid                                 /run/nginx.pid;

events {
    use epoll;
    worker_connections              4096;  ## Default: 1024
    multi_accept                    on;
}

http {
    server_tokens                   off;
    proxy_buffer_size               128k;
    proxy_buffers                   4 256k;
    proxy_busy_buffers_size         256k;

    ##
    # Basic Settings
    ##
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    types_hash_max_size             2048;
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;

    # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer:
    keepalive_timeout 650;
    keepalive_requests 10000;

    # used to test if this request was via https later
    map $http_x_forwarded_proto $insecure {
        "https" 0;
        default 1;
    }

    ##
    # Logging Settings
    ##
    map $http_x_forwarded_for $proxied {
        "" 0;
        "-" 0;
        default 1;
    }

    log_format main '$http_x_forwarded_for - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
    access_log                      /dev/stdout main if=$proxied;
    error_log                       stderr;

    ##
    # Gzip Settings
    ##
    gzip                            on;
    gzip_disable                    "msie6";
    gzip_vary                       on;
    gzip_proxied                    any;
    gzip_comp_level                 6;
    gzip_buffers                    16 8k;
    gzip_http_version               1.1;
    gzip_types
      application/javascript
      application/json
      application/x-javascript
      application/xml
      application/rss+xml
      text/css
      text/javascript
      text/js
      text/plain
      text/xml
      image/svg+xml
      image/x-icon;

    server {
        listen                      *:80;


        # A very convoluted way to redirect http -> https
        set $redir 0;

        if ($insecure) {
            set $redir I;
        }

        if ($proxied) {
            set $redir "${redir}P";
        }

        if ($redir = IP) {
            return 301 https://$http_host$request_uri;
        }

        # only enable http basic auth on the test site
        set $auth_enabled off;
        if ($host ~ "test.eclipsemega.movie" ) {
            set $auth_enabled Test;
        }
        auth_basic                   $auth_enabled;
        auth_basic_user_file         /etc/nginx/.htpasswd;

        location /simulator {
            root                /app/src;
            expires             12h;
            add_header          Cache-Control "public";
            add_header          Service-Worker-Allowed "/";
            add_header          Strict-Transport-Security "max-age=31536000";
            add_header          X-Frame-Options SAMEORIGIN;
            add_header          Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' data: https://www.youtube.com https://s.ytimg.com https://apis.google.com https://code.getmdl.io https://ajax.googleapis.com https://www.google-analytics.com https://maps.googleapis.com; img-src 'self' blob: data: https://www.google-analytics.com https://*.googleusercontent.com https://*.googleapis.com https://*.gstatic.com; style-src 'self' 'unsafe-inline' https://ajax.googleapis.com https://code.getmdl.io https://fonts.googleapis.com https://fonts.gstatic.com; font-src 'self' https://fonts.gstatic.com; child-src 'self' https://accounts.google.com; frame-src 'self' https://accounts.google.com https://www.youtube.com 'unsafe-inline' 'unsafe-eval'; object-src 'none'; media-src data:";
            try_files           $uri /index.html;
        }
        location / {
            root                /app;
            expires             1h;
            add_header          Cache-Control "public";
            add_header          Service-Worker-Allowed "/";
            add_header          Strict-Transport-Security "max-age=31536000";
            add_header          X-Frame-Options SAMEORIGIN;
            add_header          Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' data: https://www.youtube.com https://s.ytimg.com https://apis.google.com https://code.getmdl.io https://ajax.googleapis.com https://www.google-analytics.com https://maps.googleapis.com; img-src 'self' blob: data: https://www.google-analytics.com https://*.googleusercontent.com https://*.googleapis.com https://*.gstatic.com; style-src 'self' 'unsafe-inline' https://ajax.googleapis.com https://code.getmdl.io https://fonts.googleapis.com https://fonts.gstatic.com; font-src 'self' https://fonts.gstatic.com; child-src 'self' https://accounts.google.com; frame-src 'self' https://accounts.google.com https://www.youtube.com 'unsafe-inline' 'unsafe-eval'; object-src 'none'; media-src data:";
            try_files           $uri /index.html;
        }

	}
}
