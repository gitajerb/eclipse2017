daemon                              off;
user                                www-data;
worker_processes                    auto;
pid                                 /run/nginx.pid;

events {
    use epoll;
    worker_connections              4096;  ## Default: 1024
    multi_accept                    on;
}

http {
    server_tokens                   off;
    proxy_buffer_size               128k;
    proxy_buffers                   4 256k;
    proxy_busy_buffers_size         256k;

    client_max_body_size            100m;
    client_header_buffer_size       16k;
    client_body_buffer_size         32k;
    large_client_header_buffers     4 32k;
    client_body_timeout             650;
    client_header_timeout           650;

    ##
    # Basic Settings
    ##
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    types_hash_max_size             2048;
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;

    # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer:
    keepalive_timeout 650;
    keepalive_requests 10000;

    ##
    # Logging Settings
    ##
    map $request $loggable {
        ~/healthz  0;
        ~/services/upload/ready  0;
        default 1;
    }
    log_format main '$http_x_forwarded_for - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
    access_log                      /dev/stdout main if=$loggable;
    error_log                       stderr;

    ##
    # Gzip Settings
    ##
    gzip                            on;
    gzip_disable                    "msie6";
    gzip_vary                       on;
    gzip_proxied                    any;
    gzip_comp_level                 9;
    gzip_buffers                    16 8k;
    gzip_http_version               1.1;
    gzip_types                      text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen                      *:80;

        # All our requests are http because TLS termination occurs at the
        # Kubernetes ingress / Cloud Load Balancer. Here we check if the
        # original request was http or https. If it was http we return a 301
        # "moved permanently" response
        if ( $http_x_forwarded_proto = "http" ) {
            return 301 https://$host$request_uri;
        }

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_pass              http://{{UPLOAD_SERVER_HOSTNAME}}:8080;
            proxy_read_timeout      650s;
            proxy_redirect          off;
            proxy_request_buffering on;

            expires                 -1;
        }
    }
}
